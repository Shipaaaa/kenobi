apiVersion: v1
kind: ConfigMap
metadata:
  name: ignite-service-config
  namespace: ignite
data:
  IGNITE_KUBER_MODE: 'true'
  IGNITE_NAMESPACE: 'ignite'
  IGNITE_SERVICE_NAME: 'ignite-cluster'
  IGNITE_MASTER_URL: 'https://kubernetes.default.svc.cluster.local:443'
  IGNITE_CACHE_NAME: 'images-cache'
  KAFKA_BOOTSTRAP_SERVERS_IP: 'https://kafka-kafka-bootstrap.kafka.svc.cluster.local:9092'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ignite-app
  namespace: ignite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ignite-client
  template:
    metadata:
      labels:
        app: ignite-client
    spec:
      nodeSelector:
        dedicated: master
      tolerations:
        - key: dedicated
          operator: Equal
          value: master
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: "Exists"
          effect: NoSchedule
      serviceAccountName: ignite-app-account
      containers:
        - name: ignite-app-container
          image: "docker.io/shipa/ignite-persistence:latest"
          resources:
            requests:
              memory: "600Mi"
              cpu: "500m"
            limits:
              memory: "700Mi"
              cpu: "500m"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: ignite-service-config
          ports:
            - name: http
              containerPort: 8080 # REST API
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: ignite-app
  namespace: ignite
spec:
  type: NodePort
  selector:
    app: ignite-client
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 31007
